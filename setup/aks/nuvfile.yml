# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

version: '3'

vars:
  D: ""
  RUN: '{{if eq .D ""}}{{else}}echo RUN:{{end}}'
  CAT: '{{if eq .D ""}}true{{else}}cat{{end}}'
  DATA: '{{if eq .D ""}}>_data_{{else}}echo DATA:{{end}}'
  _DATA: '{{if eq .D ""}}$(cat _data_){{else}}\$DATA{{end}}'
  TMP: '{{if eq .D ""}}$NUV_TMP{{else}}\$NUV_TMP{{end}}'

env:
  KUBECONFIG:
    sh: |-
      if test -e $NUV_TMP/kubeconfig
      then echo $NUV_TMP/kubeconfig
      else echo ~/.kube/config
      fi

tasks:

  update-yaml:
    cmds:
    - curl -L https://github.com/cert-manager/cert-manager/releases/download/v1.11.0/cert-manager.yaml >cert-manager.yaml
    - curl -L "https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/aws/deploy.yaml" >ingress-deploy.yaml

  extract:
    #desc: extract the kubeconfig to access
    silent: true
    cmds:
    - "{{.RUN}} az aks get-credentials --name $AKS_NAME --resource-group $AKS_NAME --overwrite-existing -f {{.TMP}}/kubeconfig"

  config:
    desc: configure an Azure AKS kubernetes cluster
    silent: true
    cmds:
    - nuv config aks

  prereq:
    silent: true
    cmds:
    - test -n "$AKS_NAME" || die 'Please, configure AKS with "nuv config aks"'
    - "{{.RUN}} az version || die 'You need to install and configure az cli tool before running this command.'"

  create:
    silent: true
    desc: create an Azure AKS kubernetes cluster
    cmds:
    - task: prereq
    - "{{.DATA}} az account show --query 'id' -o tsv"
    - "{{.RUN}} az account set --subscription {{._DATA}}"
    - "{{.RUN}} az group create --name $AKS_NAME --location $AKS_REGION"
    - > 
      {{.RUN}} az aks create 
      -g $AKS_NAME -n $AKS_NAME 
      --enable-managed-identity 
      --node-count $AKS_COUNT 
      --node-osdisk-size=$AKS_DISK 
      --node-vm-size=$AKS_VM 
      --ssh-key-value=$AKS_SSHKEY"
    - task: extract
    - task: certman
    - task: ingress

  delete:
    silent: true
    desc: delete the current Azure AKS cluster
    cmds:
    - echo "*** Deleting the $AKS_NAME cluster"
    - "{{.DATA}} az account show --query 'id' -o tsv"
    - "{{.RUN}} az account set --subscription {{._DATA}}"
    - "{{.RUN}} az aks delete --name $AKS_NAME --resource-group $AKS_NAME"
    - "{{.RUN}} rm {{.TMP}}/kubeconfig"

  certman: 
    cmds:
      - |
        if test -z "{{.DEL}}"
        then {{.RUN}}  kubectl apply -f cert-manager.yaml
        else kubectl apply -f cert-manager.yaml
        fi

  ingress:
    cmds:
      - |
        if test -z "{{.DEL}}"
        then {{.RUN}} retry -t 1000 -m 1800 kubectl apply -f ingress-deploy.yaml
        else {{.RUN}} kubectl delete -f ingress-deploy.yaml
        fi

  lb:
    silent: true
    desc: show the load balancer
    cmds:
      - > 
        kubectl -n ingress-nginx get svc/ingress-nginx-controller  
        -o jsonpath='{.status.loadBalancer.ingress[0].ip}' 2>/dev/null
        || die "load balancer not found"
      - echo ""
