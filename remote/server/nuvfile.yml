version: '3'

dotenv:
  - /etc/environment

vars:
  BASEDIR: /tmp/nuvops
  HOSTNAME:
    sh: hostname

tasks:

  prereq:
    silent: true
    cmds:
    - test "{{OS}}" == "linux" || die "sorry this is only for linux for now"
    - test  $(echo "{{.HOSTNAME}}" | awk -F- '{print NF}') == "4" || die "hostname should be in format <type>-<group>-<node>-<cloud>"
    - test -n "$NUV_REMOTE_NTFY_TOPIC_IN" || die "configure NUV_REMOTE_NTFY_TOPIC_IN"
    - test -n "$NUV_REMOTE_NTFY_TOPIC_OUT" || die "configure NUV_REMOTE_NTFY_TOPIC_OUT"
    - test -n "$NUV_REMOTE_NTFY_TOKEN" || die "configure NUV_REMOTE_NTFY_TOKEN"

  run:
    silent: true
    desc: run remote server
    cmds:
    - task: prereq
    - |
      mkdir -p "{{.BASEDIR}}/{{.HOSTNAME}}"
      cd "{{.BASEDIR}}/{{.HOSTNAME}}"
      echo '*** {{.HOSTNAME}} ***' 
    - ntfy sub
      --token "$NUV_REMOTE_NTFY_TOKEN"
      "$NUV_REMOTE_NTFY_TOPIC_IN" 
      "nuv remote server on_message"

  on_message:
    desc: react on messages using the first tag
    silent: true
    cmds:
    #- echo "<<<{{.TAG}}>>>"
    - task: on_{{.TAG}}
    vars:
      TAG:
        sh: echo "$NTFY_TAGS"

  on_upload:
    desc: handle upload
    dir: "{{.BASEDIR}}/{{.HOSTNAME}}"
    silent: true
    cmds:
    - |
      URL="$(echo "$NTFY_RAW" | jq -r .attachment.url)"
      echo 'UPLOAD' >_tag
      if curl -sL "$URL" -o _nuvops.tgz 2>_stderr
      then 
        if /usr/bin/tar xzvf _nuvops.tgz >_stdout 2>_stderr
        then md5sum _nuvops.tgz >_out
             echo "*** upload: $(cat _out)"
        else cat _stderr >_out
        fi
      else cat _stderr >_out
      fi

  on_command:
    desc: execute commands
    vars:
      PREFIX: random --str 8
    cmds:
    - python exec.py  "{{.BASEDIR}}/{{.HOSTNAME}}" "{{.PREFIX}}" $NTFY_MESSAGE
    - |
      echo "[[{{.HOSTNAME}}]]"
      echo ">>> $(cat {{.PREFIX}}_title)"
      echo "$(cat _message)"
      test -e "{{.PREFIX}}_file" && cat {{.PREFIX}}_file
      echo "<<< $(cat {{.PREFIX}}_tag)"
    - |
      export NTFY_TOKEN="$NUV_REMOTE_NTFY_TOKEN"
      export NTFY_TOPIC="$NUV_REMOTE_NTFY_TOPIC_OUT"
      export NTFY_TITLE="[[{{.HOSTNAME}}]] $(cat {{.PREFIX}}_title)"
      export NTFY_TAGS="$(cat {{.PREFIX}}_tag)"
      export NTFY_MESSAGE="$(cat _message)"
      export NTFY_PRIORITY=3
      if test -e "{{.PREFIX}}_file"
      then export NTFY_FILENAME="{{.PREFIX}}_file" 
      fi
      ntfy publish -F
    status:
      - "! [[ {{.HOSTNAME}} ==  $NTFY_TITLE ]]"

  on_command1:
    desc: handle commands
    silent: true
    dir: "{{.BASEDIR}}/{{.HOSTNAME}}"
    cmds:
    - |
      echo "=== {{.HOSTNAME}} ~ $NTFY_TITLE" >_out
      export NUV_ROOT_PLUGIN='{{.BASEDIR}}/{{.HOSTNAME}}'
      echo '>>>' $NTFY_MESSAGE >> _out
      echo "$NTFY_MESSAGE 2>_err >>_out" >_eval
      source _eval
      if [[ $? = 0 ]] 
      then echo "OK" >_tag
      else echo "FAIL" >_tag
      fi
      cat _err >>_out
      echo "<<< $(cat _tag)" >>_out
      cat _out
    status:
      - "! [[ {{.HOSTNAME}} ==  $NTFY_TITLE ]]"
