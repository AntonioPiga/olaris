version: '3'

dotenv:
  - /etc/environment

vars:
  BASEDIR: /tmp/nuvops
  HOSTNAME:
    sh: hostname

tasks:
 
  client:
    desc: client subcommand

  server:
    silent: true
    desc: server
    cmds:
    - test "{{OS}}" == "linux" || die "sorry this is only for linux for now"
    - test  $(echo "{{.HOSTNAME}}" | awk -F- '{print NF}') == "4" || die "hostname should be in format <type>-<group>-<node>-<cloud>"
    - test -n "$NUV_REMOTE_NTFY_TOPIC" || die "configure NUV_REMOTE_NTFY_TOPIC"
    - test -n "$NUV_REMOTE_NTFY_TOKEN" || die "configure NUV_REMOTE_NTFY_TOKEN"
    - mkdir -p "{{.BASEDIR}}/{{.HOSTNAME}}"
    - echo "*** {{.HOSTNAME}} ***"
    - >
      ntfy sub
      --token "$NUV_REMOTE_NTFY_TOKEN"
      "$NUV_REMOTE_NTFY_TOPIC" 
      "nuv remote on_message"

  on_message:
    #desc: react on messages using the first tag
    cmds:
    - task: on_{{.TAG}}
    vars:
      TAG:
        sh: echo "$NTFY_TAGS"

  on_upload:
    dir: "{{.BASEDIR}}/{{.HOSTNAME}}"
    silent: true
    cmds:
    - echo -n "[upload] files "
    - |
      URL="$(echo "$NTFY_RAW" | jq -r .attachment.url)"
      if curl -sL "$URL" -o _nuvops.tgz 
      then /usr/bin/tar xzvf _nuvops.tgz | wc -l
      else echo "ERROR in downloading updted tasks!"
      fi

  on_command:
    silent: true
    dir: "{{.BASEDIR}}/{{.HOSTNAME}}"
    cmds:
    - |
      export NUV_PWD='{{.BASEDIR}}/{{.HOSTNAME}}'
      if [[ {{.HOSTNAME}} ==  $NTFY_TITLE ]]
      then 
           echo "!!! MATCH {{.HOSTNAME}}"
           echo "$NTFY_TITLE matched "
           nuv ops $NTFY_MESSAGE
      else echo "... skip {{.HOSTNAME}}"
      fi 
