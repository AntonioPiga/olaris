version: '3'

dotenv:
  - /etc/environment

vars:
  BASEDIR: /tmp/nuvops
  HOSTNAME:
    sh: hostname

tasks:

  prereq:
    silent: true
    cmds:
    - test "{{OS}}" == "linux" || die "sorry this is only for linux for now"
    - test  $(echo "{{.HOSTNAME}}" | awk -F- '{print NF}') == "4" || die "hostname should be in format <type>-<group>-<node>-<cloud>"
    - test -n "$NUV_REMOTE_NTFY_TOPIC_IN" || die "configure NUV_REMOTE_NTFY_TOPIC_IN"
    - test -n "$NUV_REMOTE_NTFY_TOPIC_OUT" || die "configure NUV_REMOTE_NTFY_TOPIC_OUT"
    - test -n "$NUV_REMOTE_NTFY_TOKEN" || die "configure NUV_REMOTE_NTFY_TOKEN"

  readme:
    desc: README
    cmds:
    - cat README.md

  logger:
    silent: true
    desc: reply logger
    cmds:
    - task: prereq
    - nuv remote client refresh
    - echo "*** logger ***"
    - >
      ntfy sub
      --token "$NUV_REMOTE_NTFY_TOKEN"
      "$NUV_REMOTE_NTFY_TOPIC_OUT" 
      "nuv remote on_log"

  on_log:
    silent: true
    #desc: log one entry
    cmds:    
    #- echo "$NTFY_RAW" |jq .     
    - echo "=== [ $NTFY_TITLE ] $NTFY_TAG"':'" $NTFY_MESSAGE"
    - curl -sL "$URL"
    - echo
    env:
      URL: 
        sh: echo "$NTFY_RAW" | jq -r .attachment.url

  notify:
    silent: true
    dir: "{{.BASEDIR}}/{{.HOSTNAME}}"
    cmds: 
      - |
        export NTFY_TOPIC="$NUV_REMOTE_NTFY_TOPIC_OUT"
        export NTFY_TITLE="{{.HOSTNAME}}"
        export NTFY_MESSAGE="$(cat _msg)"
        export NTFY_TOKEN="$NUV_REMOTE_NTFY_TOKEN"
        cat _out \
        | ntfy publish --no-firebase \
        -p 1 --tags="$(cat _tag)" --file=- \
        | jq -r '"REPLY: "+ .attachment.url'

  server:
    silent: true
    desc: remote server
    cmds:
    - task: prereq
    - |
      mkdir -p "{{.BASEDIR}}/{{.HOSTNAME}}"
      cd "{{.BASEDIR}}/{{.HOSTNAME}}"
      echo JOIN >_tag
      echo '{{.HOSTNAME}}' >_msg
      uname -a >_out
    - task: notify
    - >
      ntfy sub
      --token "$NUV_REMOTE_NTFY_TOKEN"
      "$NUV_REMOTE_NTFY_TOPIC_IN" 
      "nuv remote on_message"

  on_message:
    #desc: react on messages using the first tag
    cmds:
    - task: on_{{.TAG}}
    vars:
      TAG:
        sh: echo "$NTFY_TAGS"

  on_upload:
    dir: "{{.BASEDIR}}/{{.HOSTNAME}}"
    silent: true
    cmds:
    - |
      URL="$(echo "$NTFY_RAW" | jq -r .attachment.url)"
      echo 'UPLOAD' >_tag
      if curl -sL "$URL" -o _nuvops.tgz 2>_stderr
      then 
        if /usr/bin/tar xzvf _nuvops.tgz 2>_stderr
        then md5sum _nuvops.tgz >_out
        else cat _stderr >_out
        fi
      else cat _stderr >_out
      fi
    - task: notify

  on_command:
    silent: true
    dir: "{{.BASEDIR}}/{{.HOSTNAME}}"
    cmds:
    - |
      echo ">>> $NTFY_TITLE MATCH {{.HOSTNAME}}"
      export NUV_ROOT_PLUGIN='{{.BASEDIR}}/{{.HOSTNAME}}'
      echo 'COMMAND:' $NTFY_MESSAGE 
      echo "[running...]"
      echo "$NTFY_MESSAGE" >_msg
      if eval "$NTFY_MESSAGE" >_stdout 2>_stderr
      then echo "OK" >_tag
      else echo "FAIL" >_tag
      fi
      cat _stderr _stdout >_out  
    #- task: notify
    status:
      - "! [[ {{.HOSTNAME}} ==  $NTFY_TITLE ]]"

  client:
    desc: client subcommand
