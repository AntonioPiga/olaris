# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

version: "3"

env:
  KUBECONFIG:
    sh: |-
      if test -e $NUV_TMP/kubeconfig
      then echo $NUV_TMP/kubeconfig
      else echo ~/.kube/config
      fi

tasks:
  k:info:
    desc: show cluster info
    cmds:
      - kubectl cluster-info

  k:no:
    desc: show nodes
    cmds:
      - kubectl get nodes

  k:ns:
    desc: show namespaces
    cmds:
      - kubectl get ns

  k:po:
    desc: show pods
    cmds:
      - |-
        if test -z "{{._log_}}"
        then kubectl -n nuvolaris get po,sts,jobs
        else echo log '{{._log_}}'
        fi

  k:sv:
    desc: show services
    cmds:
      - kubectl -n nuvolaris get svc

  k:in:
    desc: show ingress
    cmds:
      - kubectl -n nuvolaris get ingress

  images:
    desc: show services
    silent: true
    cmds:
      - kubectl -n nuvolaris get po nuvolaris-operator -o jsonpath='{.spec.containers[0].image}{"\n"}'
      - kubectl -n nuvolaris get po controller-0 -o jsonpath='{.spec.containers[0].image}{"\n"}'
      - kubectl -n nuvolaris get po couchdb-0 -o jsonpath='{.spec.containers[0].image}{"\n"}'

  export:
    silent: true
    desc: exporting kubeconfig to the F=<file> (use - for ~/.kube/config)
    cmds:
      - test -n "{{.F}}" || die "please add F=<file> to specify the target, use - for ~/.kube/config"
      - |
        if test "{{.F}}" = "-"
        then FILE=~/.kube/config
        else FILE="{{.F}}"
        fi
        if test -e $NUV_TMP/kubeconfig
        then  cp $NUV_TMP/kubeconfig $FILE
              kubectl --kubeconfig $FILE cluster-info
        else echo "No kubeconfig to export"
        fi

  log:oper:
    desc: show nuvolaris operator logs
    cmds:
      - kubectl -n nuvolaris logs po/nuvolaris-operator -f

  log:cert:
    desc: show cert manager logs
    cmds:
      - kubectl -n cert-manager logs -l app=cert-manager -f

  log:ctl:
    desc: show controller logs
    cmds:
      - kubectl -n nuvolaris logs controller-0 -f

  lb:
    desc: show ingress load balancer
    cmds:
      - kubectl -n ingress-nginx get svc

  config:
    desc: show deployment status
    silent: true
    cmds:
      - kubectl -n nuvolaris get cm/config -o yaml

  runtimes:
    desc: show runtimes
    silent: true
    cmds:
      - kubectl -n nuvolaris get cm/openwhisk-runtimes -o jsonpath='{.data.*}'

  apihost:
    desc: show current apihost
    silent: true
    cmds:
      - echo NUVOLARIS_APIHOST=$NUVOLARIS_APIHOST
      - wsk property get | awk '/whisk API host/{print}'

  crd:
    desc: show deployed configuration
    silent: true
    cmds:
      - kubectl -n nuvolaris get wsk/controller -o yaml

  k:ex:
    desc: exec bash in pod P=...
    cmds:
      - test -n "{{.P}}" || die "use P= for pod"
      - kubectl -n nuvolaris exec -ti {{.P}} -- bash

  watch:
    desc: watch nodes and pod deployment
    silent: true
    cmds:
      - watch kubectl -n nuvolaris get po,deploy,sts

  info:
    - wsk property get
    - echo "KUBECONFIG=$KUBECONFIG"
    - kubectl get nodes

  boh:
    cmds:
    - /usr/bin/ssh -V || die "no ssh"
    - config AWS_PREREQ_OK="true"
    status:
    - config AWS_PREREQ_OK 